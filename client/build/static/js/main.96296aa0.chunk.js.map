{"version":3,"sources":["auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","user/Signup.js","user/Signin.js","auth/PrivateRoute.js","auth/AdminRoute.js","core/Checkbox.js","core/RadioBox.js","core/FixedPrices.js","core/Shop.js","core/Checkout.js","core/Cart.js","core/Product.js","user/UserDashboard.js","user/apiUser.js","user/AdminDashboard.js","user/UserProfile.js","admin/ApiAdmin.js","admin/AddCateogary.js","admin/AddProduct.js","admin/UpdateProduct.js","admin/Orders.js","admin/ManageProducts.js","core/About.js","Routes.js","index.js"],"names":["isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","_ref","React","createElement","className","style","height","Link","to","Fragment","user","role","undefined","length","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Menu","getProducts","sortBy","concat","json","getCategories","res","getFilteredProducts","async","skip","limit","filters","arguments","data","headers","Accept","body","stringify","ShowImage","item","url","src","_id","alt","name","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","redirect","setRedirect","useState","count","setCount","addToCart","addItem","cart","Array","from","Set","map","p","id","find","setItem","handleChange","productId","event","target","value","updateItem","forEach","Redirect","shouldRedirect","price","category","moment","createdAt","fromNow","quantity","showViewButton","i","splice","showRemoveButton","showAddToCart","type","onChange","showCartUpdateOptions","Search","setData","categories","search","results","searched","useEffect","error","searchData","params","query","queryString","list","searchSubmit","e","preventDefault","searchMessage","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsbySell","setProductsBySell","productsbyArrival","setProductsByArrival","setError","loading","setLoading","showLoading","Signup","values","setValues","email","password","success","clickSubmit","signup","display","textAlign","Signin","redirectToReferrer","signin","authenticate","PrivateRoute","component","Component","rest","Route","Object","assign","render","props","AdminRoute","Checkbox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","Checkout","products","clientToken","instance","address","userId","token","getToken","getBraintreeClientToken","Authorization","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","nonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","processPayment","createOrderData","transaction_id","transaction","createOrder","order","setTimeout","reload","message","showDropIn","onBlur","DropIn","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Product","setProduct","relatedProducts","setRelatedProducts","loadSingleProduct","read","listRelated","match","substring","UserDashboard","setHistory","init","getPurchaseHistory","h","purchaseHistory","AdminDashboard","UserProfile","update","userData","updateUser","auth","profileUpdate","redirectuser","AddCateogary","setName","setSuccess","createCategory","showSuccess","showError","required","AddProduct","shipping","photo","createdProduct","formData","FormData","files","set","createProduct","accept","UpdateProduct","redirectToProfile","getProduct","initCategories","updateProduct","productData","redirectUser","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","handleStatusChange","orderId","updateOrderStatus","status","showInput","readOnly","o","oIndex","borderBottom","showStatus","Moment","pIndex","padding","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","href","rel","Routes","BrowserRouter","Switch","exact","About","Profile","AddCategory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.96296aa0.chunk.js","sourcesContent":["// Register User\nexport const signup = async user => {\n    return fetch(`/api/signup`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Login User\nexport const signin = async user => {\n    return fetch(`/api/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Save token in storage\nexport const authenticate = (data, next) => {\n    if(typeof window !== 'undefined')\n    {\n        localStorage.setItem('jwt', JSON.stringify(data))\n        next();\n    }\n}\n\n// Signout so destroy the local token\nexport const signout = (next) => {\n    if(typeof window !== 'undefined')\n    {\n        localStorage.removeItem('jwt');\n        next();\n        return fetch('/api/signout', {\n            method: \"GET\"\n        })\n        .then(response => {\n            console.log(\"signout\", response);\n        })\n        .catch(err => console.log(err));\n    }\n};\n\n// Return if user is authenticated or not\nexport const isAuthenticated = () => {\n    if(typeof window == 'undefined')\n    {\n        return false;\n    }\n\n    if(localStorage.getItem('jwt'))\n    {\n        return JSON.parse(localStorage.getItem('jwt'));\n    } else {\n        return false;\n    }\n}\n","import React, {Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {signout, isAuthenticated} from '../auth';\nimport {itemTotal} from './cartHelpers';\n\nconst isActive = (history, path) => {\n    if(history.location.pathname === path)\n    {\n        return {color: '#ff9900'}\n    }\n\n    else\n    return {color: '#ffffff'}\n}\n\n\nconst Menu = ({history}) => {\n    return (\n        <div>\n            <ul className=\"nav nav-tabs bg-dark\" style={{height: 50}}>\n        \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" style={isActive(history, '/')} to=\"/\">HOME</Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" style={isActive(history, '/shop')} to=\"/shop\">SHOP</Link>\n                    </li>\n\n                {!isAuthenticated() && (\n                 <Fragment>         \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" style={isActive(history, '/signin')} to=\"/signin\">LOGIN</Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" style={isActive(history, '/signup')} to=\"/signup\">SIGNUP</Link>\n                    </li>\n \n                    <li className=\"nav-item ml-auto\">\n                       <Link className=\"nav-link\" style={isActive(history, '/about')} to=\"/about\">ABOUT</Link>\n                    </li>\n                </Fragment>\n                )}\n\n                {isAuthenticated() && (\n                    <Fragment>\n                     {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                         \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" style={isActive(history, '/user/dashboard')} to=\"/user/dashboard\">DASHBOARD</Link>\n                    </li>\n                     )}\n\n                     {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                         \n                         <li className=\"nav-item\">\n                             <Link className=\"nav-link\" style={isActive(history, '/admin/dashboard')} to=\"/admin/dashboard\">DASHBOARD</Link>\n                         </li>\n                          )}\n                    \n                    \n                    <li className=\"nav-item\">\n                       <Link className=\"nav-link\" style={isActive(history, '/cart')} to=\"/cart\">\n                           CART <sup><small className=\"cart-badge\">{itemTotal()}</small></sup>\n                        </Link>\n                    </li>\n                          \n                    <li className=\"nav-item\">\n                       <Link className=\"nav-link\" style={isActive(history, '/about')} to=\"/about\">ABOUT</Link>\n                    </li>\n                    \n                    <li className=\"nav-item ml-auto\">\n                        <span className=\"nav-link\" style={{cursor: 'pointer', color: '#ffffff'}} onClick={() => signout(() => {\n                        history.push('/')\n                        })}>LOGOUT</span>\n                    </li>\n                    \n                    </Fragment>                 \n\n                )}\n                \n            </ul>\n        </div>\n    )\n}\n\nexport default withRouter(Menu);\n","// Add item to local storage\nexport const addItem = (item, next) => {\n    let cart = []\n    if(typeof window !== undefined)\n    {\n        if(localStorage.getItem('cart'))\n        {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.push({\n            ...item, \n            count: 1\n        })\n\n        // remove duplicates\n        // build array from new set and turn it back nito array using Array.from so that later we can re-map it\n        // now set will only allow unique values in it \n        // so pass the ids of each product\n        // If loop tries to add same value again, it will get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product\n        \n        cart = Array.from(new Set(cart.map((p) => (p._id) ))).map(id => {\n            return cart.find(p => p._id === id)\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n}\n\n// Return total length of cart\nexport const itemTotal = () => {\n    if(typeof window !== undefined )\n    {\n        if(localStorage.getItem('cart'))\n        {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    \n    // By default\n    return 0;\n}\n\n// Get cart\nexport const getCart = () => {\n    if(typeof window !== undefined )\n    {\n        if(localStorage.getItem('cart'))\n        {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n\n    return [];\n    \n}\n\n// Update cart item\nexport const updateItem = (productId, count) => {\n    let cart = [];\n\n    if(typeof window !== undefined)\n    {\n        if(localStorage.getItem('cart'))\n        {\n            cart = JSON.parse(localStorage.getItem('cart'))\n        }\n\n        cart.forEach((p) => {\n            if(p._id === productId)\n            {\n                p.count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n\n    return;\n}\n\n// Remove item from cart\nexport const removeItem = (productId) => {\n    let cart = [];\n\n    if(typeof window !== undefined)\n    {\n        if(localStorage.getItem('cart'))\n        {\n            cart = JSON.parse(localStorage.getItem('cart'))\n        }\n\n        cart.forEach((p,i) => {\n            if(p._id === productId)\n            {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n\n    return cart;\n};\n\n// Empty cart after successfull purchase\nexport const emptyCart = next => {\n    if(typeof window !== \"undefined\")\n    {\n        localStorage.removeItem('cart')\n        next()\n    }\n}","import React from 'react';\nimport Menu from './Menu';\nimport '../styles.css'\n\nconst Layout = ({title = 'Title', description='Description', className, children}) => {\n    return (\n        <div>\n            <Menu />\n            <div className=\"jumbotron\">\n                <h2>{title}</h2>\n                <p className=\"lead\">{description}</p>\n            </div>\n            <div className={className}>{children}</div>\n        </div>\n    )\n}\n\nexport default Layout\n","import queryString from 'query-string';\n\n// Get products from backend\nexport const getProducts = (sortBy) => {\n    return fetch(`/api/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: 'GET'\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n} \n\n\n// Get categories from backend\nexport const getCategories = () => {\n    return fetch(`/api/categories`, {\n        method: \"GET\"\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.log(err));\n}\n\n// Get products based on category and price filters\nexport const getFilteredProducts = async(skip, limit, filters = {}) => {\n    const data = {\n        limit, skip, filters\n    };\n    return fetch(`/api/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Get categpry based on search on home page\nexport const list = params => {\n\n    const query = queryString.stringify(params);\n\n    return fetch(`/api/products/search?${query}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Get a single product from backend\nexport const read = (productId) => {\n    return fetch(`/api/product/${productId}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Get related products from backend\nexport const listRelated = (productId) => {\n    return fetch(`/api/products/related/${productId}`, {\n        method: \"GET\"\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.log(err));\n}\n\n// Get braintree client token from backend\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`/api/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        },\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.log(err));\n}\n\n// Process final payment\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`/api/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(paymentData)\n    })\n    .then(res => {\n        return res.json(res)\n    })\n    .catch(err => console.log(err));\n}\n\n// Create order\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`/api/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ order: createOrderData })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React from 'react'\n\nconst ShowImage = ({item, url}) => {\n    return (\n        <div className=\"product-img\">\n            <img src={`/api/${url}/photo/${item._id}`} alt={item.name} className=\"mb-3\" style={{maxHeight:\"100%\", maxWidth: \"100%\"}}/>\n        </div>\n    )\n}\n\nexport default ShowImage\n","import React, {useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport {addItem, updateItem, removeItem} from './cartHelpers';\n\nconst Card = ({product, showViewProductButton = true, showAddToCartButton = true, \n    cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run=undefined }) => {\n\n    const [redirect, setRedirect] = useState(false);\n    const [count, setCount] = useState(product.count);\n    \n    const showViewButton = (showViewProductButton) => {\n        return (\n            showViewProductButton && (\n                <Link to ={`/product/${product._id}`} className=\"mr-2\">\n                    <button className=\"btn btn-outline-primary mt-2 mb-2 mr-2\">\n                            View Product\n                    </button>    \n                </Link>\n            )\n        )\n    }\n\n    const addToCart = () => {\n        addItem(product, () => {\n            setRedirect(true);\n        })\n    }\n\n    const shouldRedirect = redirect => {\n        if(redirect)\n        {\n            return <Redirect to = '/cart' />\n        }\n    }\n\n    const showAddToCart = (showAddToCartButton) => {\n        return (\n            showAddToCartButton && <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\n                Add to Cart\n            </button>\n        )\n    }\n\n    const showRemoveButton = showRemoveProductButton => {\n        return (\n          showRemoveProductButton && (\n            <button\n              onClick={() => {\n                removeItem(product._id);\n                setRun(!run); // run useEffect in parent Cart\n              }}\n              className=\"btn btn-outline-danger mt-2 mb-2\"\n            >\n              Remove Product\n            </button>\n          )\n        );\n      };\n\n    const showStock = (quantity) => {\n        return quantity > 0 ? \n            <span className=\"badge badge-primary badge-pill\">In Stock</span> \n            : <span className=\"badge badge-danger badge-pill\">Out of Stock</span>\n    }\n\n    const handleChange = productId => event => {\n        setRun(!run);\n        setCount(event.target.value < 1 ? 1 : event.target.value);\n        if (event.target.value >= 1) {\n            updateItem(productId, event.target.value);\n        }\n    };\n\n\n    const showCartUpdateOptions = cartUpdate => {\n        return cartUpdate && <div>    \n            <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">Adjust Quantity</span>\n                </div>\n                <input type=\"number\" value={count} className=\"form-control\" onChange={handleChange(product._id)} />\n            </div>\n        </div>\n    }\n    \n    return (\n            <div className=\"card\">\n                <div className=\"card-header name text-center\">{product.name}</div>\n                <div className=\"card-body\">\n                    {shouldRedirect(redirect)}\n                    <ShowImage item={product} url=\"product\" />\n                    \n                    <p className = \"mt-2\">{product.description}</p>\n                    <p className = \"font-weight-bold\">₹ {product.price}</p>\n                    <p className = \"black-10\">Category: {product.category && product.category.name}</p>\n                    <p className = \"black-8\">Added {moment(product.createdAt).fromNow()}</p>\n\n                    {showStock(product.quantity)}\n                    <br />\n                        {showViewButton(showViewProductButton)}\n                    \n                    \n                    {showRemoveButton(showRemoveProductButton)}\n\n                        {showAddToCart(showAddToCartButton)}\n                    \n                    {showCartUpdateOptions(cartUpdate)}\n                </div>\n            </div>\n            \n    )\n}\n\nexport default Card\n","import React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n    const [data, setData] = useState({\n        categories: [],\n        category: \"\",\n        search: \"\",\n        results: [],\n        searched: false\n    });\n\n    const { categories, category, search, results, searched } = data;\n\n    const loadCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setData({ ...data, categories: data });\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const searchData = () => {\n        // console.log(search, category);\n        if (search) {\n            list({ search: search || undefined, category: category }).then(\n                response => {\n                    if (response.error) {\n                        console.log(response.error);\n                    } else {\n                        setData({ ...data, results: response, searched: true });\n                    }\n                }\n            );\n        }\n    };\n\n    const searchSubmit = e => {\n        e.preventDefault();\n        searchData();\n    };\n\n    const handleChange = name => event => {\n        setData({ ...data, [name]: event.target.value, searched: false });\n    };\n\n    const searchMessage = (searched, results) => {\n        if(searched && results.length > 0)\n        {\n            return `Found ${results.length} products`\n        }\n\n        // no products found\n        if(searched && results.length < 1)\n        {\n            return `No Products Found`\n        }\n\n    }\n\n    const searchedProducts = (results = []) => {\n        return (\n            <div>\n                <h2 className=\"mt-4 mb-4\">\n                    {searchMessage(searched, results)}    \n                </h2>    \n                <div className=\"row\">\n                    {results.map((product, i) => (\n                        <Card key={i} product={product} />\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    const searchForm = () => (\n        <form onSubmit={searchSubmit}>\n            <span className=\"input-group-text\">\n                <div className=\"input-group input-group-lg\">\n                    <div className=\"input-group-prepend\">\n                        <select\n                            className=\"btn mr-2\"\n                            onChange={handleChange(\"category\")}\n                        >\n                            <option value=\"All\">All Categories</option>\n                            {categories.map((c, i) => (\n                                <option key={i} value={c._id}>\n                                    {c.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        onChange={handleChange(\"search\")}\n                        placeholder=\"Search by name\"\n                    />\n                </div>\n                <div\n                    className=\"btn input-group-append\"\n                    style={{ border: \"none\" }}\n                >\n                    <button className=\"input-group-text\">Search</button>\n                </div>\n            </span>\n        </form>\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"container mb-3\">{searchForm()}</div>\n            <div className=\"container-fluid mb-3\">\n                {searchedProducts(results)}\n            </div>\n        </div>\n    );\n};\n\nexport default Search;","import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {getProducts} from './apiCore';\nimport Card from './Card';\nimport Search from './Search'\n\nconst Home = () => {\n\n    const [productsbySell, setProductsBySell] = useState([])\n    const [productsbyArrival, setProductsByArrival] = useState([])\n    const [error, setError] = useState(false)\n    const [loading, setLoading] = useState(true);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if(data.err)\n            {\n                setError(data.err);\n                console.log(error);\n                setLoading(false);\n            }\n\n            else\n            {\n                setProductsBySell(data);\n                setLoading(false);\n            }\n        })\n    }\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            if(data.err)\n            {\n                setError(data.err);\n                setLoading(false);\n            }\n\n            else\n            {\n                setProductsByArrival(data);\n                setLoading(false);\n            }\n        })\n    }\n\n    \n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>)\n    )\n\n    useEffect(() => {\n        loadProductsBySell()\n        loadProductsByArrival()\n        showLoading()\n        //eslint-disable-next-line\n    }, [])\n\n    return (\n        <Layout title=\"BookSMart\" description=\"Buy some awesome dev related books now\" className=\"container-fluid\">\n            <Search />\n            <h2 className=\"mb-4\">New Arrivals</h2>\n            {showLoading()}\n            <div className=\"row\">                \n                {productsbyArrival.map((product, i) =>(\n                    <div key={i} className=\"col-4 mb-3\">    \n                       <Card product={product} />      \n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            {showLoading()}\n            <div className=\"row\">                \n                {productsbySell.map((product, i) =>(\n                    <div key={i} className=\"col-4 mb-3\">    \n                       <Card product={product} />      \n                    </div>\n                ))}\n            </div>\n\n        </Layout>\n           \n    )\n};\n\nexport default Home\n","import React, {useState} from 'react';\nimport Layout from '../core/Layout';\nimport {Link} from 'react-router-dom';\nimport {signup} from '../auth';\n\nconst Signup = () => {\n\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: '',\n        success: false\n    });\n\n    const {name, email, password, success, error} = values;\n\n    const handleChange = name => e => {\n        setValues({...values, error: false, [name]: e.target.value})\n    };\n    \n        const clickSubmit = (e) => {\n        e.preventDefault();\n        setValues({...values, error: false});\n        signup({name, email, password})\n        .then(data => {\n            if(data.error)\n            {\n                setValues({...values, error: data.error, success: false})\n            }\n            else\n            {\n                setValues({...values, name: \"\", email: \"\", password: \"\", error: \"\", success: true});\n            }\n        })\n\n    }\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\n\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\n\n            </div>\n             \n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\n            </div>\n            \n            <div style={{textAlign : \"center\"}} >\n                <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n            </div>\n\n        </form>\n    );\n\n    const showError = () => {\n        return (<div className=\"alert alert-danger\" style={{display: error ? '': 'none'}}>\n            {error}\n        </div>\n        )\n    }\n\n    const showSuccess = () => {\n        return (\n        <div className=\"alert alert-info\" style={{display: success ? '': 'none'}}>\n            New account is created. Please <Link to='/signin'>Signin</Link>\n        </div>\n        )\n    }\n\n\n    return (\n        <Layout title=\"Signup\" description=\"Sign up to the Node React E-commerce app\" className=\"container col-md-8 offset-md-2\">\n            {showError()}\n            {showSuccess()}\n            {signUpForm()}\n        </Layout>\n           \n    )\n};\n\nexport default Signup;\n","import React, {useState} from 'react';\nimport Layout from '../core/Layout';\nimport {Redirect} from 'react-router-dom';\nimport {signin, authenticate, isAuthenticated} from '../auth';\n\nconst Signin = () => {\n\n    const [values, setValues] = useState({\n        email: '',\n        password: '',\n        error: '',\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const {email, password, loading, error, redirectToReferrer} = values;\n    const {user} = isAuthenticated();\n\n    const handleChange = name => e => {\n        setValues({...values, error: false, [name]: e.target.value})\n    };\n    \n        const clickSubmit = (e) => {\n        e.preventDefault();\n        setValues({...values, error: false, loading: true});\n        signin({email, password})\n        .then(data => {\n            if(data.err)\n            {\n                setValues({...values, error: data.err, loading: false})\n            }\n            else\n            {\n                authenticate(data, () => {\n                    setValues({...values, redirectToReferrer:true, loading: false});\n                })\n            }\n        })\n\n    }\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\n\n            </div>\n             \n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\n            </div>\n            \n            <div style={{textAlign : \"center\"}} >\n                <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n            </div>\n\n        </form>\n    );\n\n    const showError = () => {\n        return (<div className=\"alert alert-danger\" style={{display: error ? '': 'none'}}>\n            {error}\n        </div>\n        )\n    }\n\n    const showLoading = () => \n        \n            loading && (<div className=\"alert alert-info\">\n                <h2>Loading...</h2>\n            </div>);\n\n    const redirectUser = () => {\n            if(redirectToReferrer)\n            {\n                if(user.role===1)\n                return <Redirect to=\"/admin/dashboard\" />\n\n                else\n                return <Redirect to=\"/user/dashboard\" />\n            }\n\n            if(isAuthenticated())\n            {\n                return <Redirect to=\"/\" />\n            }\n        };\n\n\n    return (\n        <Layout title=\"Signin\" description=\"Login to your account to view and purchase awesome content\" className=\"container col-md-8 offset-md-2\">\n            {showError()}\n            {showLoading()}\n            {redirectUser()}\n            {signUpForm()}\n        </Layout>\n           \n    )\n};\n\nexport default Signin\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated() ? (\n        <Redirect to='/signin' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/signin' />\n      )\n    }\n  />\n);\n\nexport default AdminRoute;","import React, {useState} from 'react'\n\nconst Checkbox = ({categories, handleFilters}) => {\n    \n    const [checked, setChecked] = useState([])\n\n    const handleToggle = c => () => {\n        const currentCategoryId = checked.indexOf(c); // return the first index or -1\n\n        const newCheckedCategoryId = [...checked]\n        // if currently checked was not alredy in checked state then we want to push\n        // else pull/take off\n        if(currentCategoryId === -1)    //  Not already in the state\n        {\n            newCheckedCategoryId.push(c);\n        }\n        else // Already in state, we need to remove it\n        {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n\n        setChecked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    }\n    \n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input onChange={handleToggle(c._id)} value={checked.indexOf(c._id === -1)} type=\"checkbox\" className=\"form-check-input\" />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ))\n}\n\nexport default Checkbox;\n","import React, {useState} from 'react'\n\nconst RadioBox = ({prices, handleFilters}) => {\n    \n    const [value, setValue] = useState(0)\n    \n    const handleChange = (e) => {\n        handleFilters(e.target.value);\n        setValue(e.target.value);\n        console.log(value);\n    }\n\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input onChange={handleChange} value={`${p._id}`} type=\"radio\" name={p} className=\"mr-2 ml-4\" />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ))\n}\n\nexport default RadioBox;\n","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n\n    {\n        _id: 1,\n        name: \"₹0 to 200\",\n        array: [0, 200]\n    },\n\n    {\n        _id: 2,\n        name: \"₹200 to 500\",\n        array: [200, 500]\n    },\n\n    {\n        _id: 3,\n        name: \"₹500 to 750\",\n        array: [500, 1000]\n    },\n\n    {\n        _id: 4,\n        name: \"₹750+\",\n        array: [750, 99999]\n    },\n]","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./FixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n                console.log(error);\n                setLoading(false);\n            } else {\n                setCategories(data);\n                setLoading(false);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n                setLoading(false);\n            } else {\n                setFilteredResults(data.data);\n                setLoading(false);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n                setLoading(false);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setLoading(false);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <div className=\"text-center\">    \n                    <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                        Load more\n                    </button>\n                </div>\n            )\n        );\n    };\n\n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>)\n    )\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n        showLoading()\n        //eslint-disable-next-line\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find books of your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    {showLoading()}\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;\n","import React, { useState, useEffect } from \"react\";\nimport { getBraintreeClientToken, processPayment, createOrder} from \"./apiCore\";\nimport { emptyCart } from \"./cartHelpers\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link} from \"react-router-dom\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Checkout = ({ products }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\",\n        instance: {},\n        address: \"\"\n    });\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                setData({ ...data, error: data.error });\n            } else {\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n        //eslint-disable-next-line\n    }, []);\n\n    const handleAddress = event => {\n        setData({...data, address: event.target.value})\n    }\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    \n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // create order\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                // empty cart\n                                emptyCart(() => {\n                                    console.log(\"payment success and empty cart\");\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                                setTimeout(() => window.location.reload(), 2200);\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: \"\" })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\" style={{display: data.success ? \"none\" : \"\" }}>\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea onChange = {handleAddress} className=\"form-control\" \n                            value={data.address} placeholder=\"Please enter your shipping address here..\" />\n                    </div>\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: \"vault\"\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\" style={{display: data.success ? \"none\" : \"\" }}>\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div\n            className=\"alert alert-info\"\n            style={{ display: success ? \"\" : \"none\" }}\n        >\n            Thanks! Your payment was successful! Please check your email\n        </div>\n    );\n\n    const showLoading = loading =>\n        loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ₹ {getTotal()}</h2>\n            <p>Try checking out with a dummy credit card number like 4111 1111 1111 1111 and any expiration date and cvv</p>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from './Layout';\nimport {getCart} from './cartHelpers';\nimport Card from './Card';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n    const noItemsMessage = () => {\n        return (\n            <div>\n                <h2>Your cart is empty</h2>\n                <br />\n                <Link to =\"/shop\">Start Shopping now!</Link>\n            </div>\n        )\n    }\n\n    \n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {`${items.length}`} items</h2>\n                <hr />\n                {items.map((p, i) => (\n                <Card key={i} product={p} showAddToCartButton={false} \n                cartUpdate = {true} showRemoveProductButton={true} setRun={setRun} run={run} />\n                ))}\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        setItems(getCart())\n    }, [run])\n\n    return (\n        <Layout title=\"My Cart\" description=\"Manage your cart items. Add, Remove, Checkout or continue shopping\"\n         className=\"container-fluid\">\n             \n        <div className=\"row\">\n            <div className=\"col-6\">\n                {items.length > 0 ? showItems(items) : noItemsMessage()}\n            </div>\n\n            \n            <div className=\"col-6\">\n                <h2 className=\"mb-4\">Cart summary</h2>\n                <hr />\n                <Checkout products={items} />\n            </div>\n        </div>\n        </Layout>\n           \n    )\n}\n\nexport default Cart\n","import React, {Fragment, useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {read, listRelated} from './apiCore';\nimport Card from './Card';\n\nconst Product = (props) => {\n\n    const [product, setProduct] = useState({});\n    const [relatedProducts, setRelatedProducts] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if(data.err)\n            {\n                setError(data.err);\n                console.log(error);\n                setLoading(false);\n            }\n\n            else\n            {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if(data.err)\n                    {\n                        setError(data.err);\n                    }\n\n                    else\n                    {\n                        setRelatedProducts(data);\n                    }\n                });\n\n                setLoading(false);\n            }\n        })\n    }\n    \n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2 className = \"text-center\">Loading...</h2>\n        </div>)\n    )\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n\n        loadSingleProduct(productId);\n        showLoading();\n        // eslint-disable-next-line\n    }, [props])\n\n    return (\n        <Fragment>\n            \n            {loading ? (\n                showLoading()\n            ): (<Layout title={product && product.name} description={product && product.description && product.description.substring(0, 100)} className=\"container-fluid\">\n                      \n            <div className=\"row\">\n                <div className=\"col-8\">\n                { product && product.description && <Card product={product} showViewProductButton ={false} /> }                \n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related Products</h4>\n                    {relatedProducts.map((p, i) => (\n                        <div className=\"mb-3\">\n                            <Card key={i} product={p} />    \n                        </div>\n                    ) )}\n                </div>\n            </div>\n\n        </Layout>)}\n\n        </Fragment>\n    )\n}\n\nexport default Product\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {getPurchaseHistory} from './apiUser';\nimport moment from \"moment\";\n\nconst UserDashboard = () => {\n\n    const {user: {_id, name, email, role}, token} = isAuthenticated();\n    \n    const [history, setHistory] = useState([]);\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if(data.error)\n            {\n                console.log(data.error)\n            }\n            else\n            {\n                setHistory(data);\n            }\n        })\n    }\n\n    useEffect(() => {\n        init(_id, token)\n        //eslint-disable-next-line\n    }, [])\n\n    const userLinks = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h4 className=\"card-header text-center\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"><Link to=\"/cart\" className=\"nav-link\">My Shopping Cart</Link></li>\n                    <li className=\"list-group-item\"><Link to={`/profile/${_id}`} className=\"nav-link\">Update Profile</Link></li>\n                </ul>\n\n            </div>\n        )\n    }\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n            <h3 className=\"card-header text-center\">User Information</h3>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">{name}</li>\n                <li className=\"list-group-item\">{email}</li>\n                <li className=\"list-group-item\">{role === 1 ? 'Admin': `User id : ${_id}`}</li>\n            </ul>\n            </div>\n        )\n    }\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\n    return (\n        <Layout title=\"Dashboard\" description={`Welcome, ${name}`} className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"xs-col-12 col-sm-4\">\n                    {userLinks()}\n                </div>\n\n                <div className=\"xs-col-12 col-sm-8\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default UserDashboard;\n","// Read user  information from backend\nexport const read = (userId, token) => {\n    return fetch(`/api/user/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n} \n\n// Update profile\nexport const update = (userId, token, userData) => {\n    return fetch(`/api/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(userData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// Update user in local storage\nexport const updateUser = (user, next) => {\n    if(typeof window !== 'undefined')\n    {\n        if(localStorage.getItem('jwt'))\n        {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem('jwt', JSON.stringify(auth))\n            next()\n        }\n    }\n}\n\n// Get purchase history\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`/api/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\n\nconst AdminDashboard = () => {\n\n    const {user: {_id, name, email, role}} = isAuthenticated();\n\n    const adminLinks = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h4 className=\"card-header text-center\">Admin Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"><Link to=\"/create/category\" className=\"nav-link\">Create Category</Link></li>\n                    <li className=\"list-group-item\"><Link to=\"/create/product\" className=\"nav-link\">Create Product</Link></li>\n                    <li className=\"list-group-item\"><Link to=\"/admin/orders\" className=\"nav-link\">Manage Orders</Link></li>\n                    <li className=\"list-group-item\"><Link to=\"/admin/products\" className=\"nav-link\">Manage Products</Link></li>\n                </ul>\n\n            </div>\n        )\n    }\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n            <h3 className=\"card-header text-center\">Admin Information</h3>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">{name}</li>\n                <li className=\"list-group-item\">{email}</li>\n                <li className=\"list-group-item\">{role === 1 ? 'Admin': `User id : ${_id}`}</li>\n            </ul>\n            </div>\n        )\n    }\n\n    return (\n        <Layout title=\"Admin Dashboard\" description={`Welcome, ${name}`} className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"xs-col-12 col-sm-4\">\n                    {adminLinks()}\n                </div>\n\n                <div className=\"xs-col-12 col-sm-8\">\n                    {adminInfo()}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default AdminDashboard;\n","import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {read, update, updateUser} from './apiUser';\n\nconst UserProfile = ({match}) => {\n    \n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        loading: true,\n        success: false\n    });\n\n    const {name, email, password, error, success, loading} = values;\n    const {token} = isAuthenticated()\n\n    const init = (userId) => {\n        read(userId, token).then(data => {\n            if(data.error)\n            {\n                setValues({...values, error: true, loading: false})\n            }\n            else\n            {\n                setValues({...values, name: data.name, email: data.email, loading: false})\n            }\n        })\n    }\n\n    const handleChange = name => e => {\n        setValues({...values, error: false, [name]: e.target.value})\n    }   \n\n    const clickSubmit = (e) => {\n        e.preventDefault();\n        update(match.params.userId, token, {name, email, password}).then(data => {\n            if(data.error)\n            {\n                console.log(data.error)\n            }\n\n            else\n            {\n                updateUser(data, () => {\n                    setValues({...values, name: data.name, email: data.email, success: true})\n                })\n            }\n        })\n    }\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" value={name} onChange={handleChange('name')} className=\"form-control\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" value={email} onChange={handleChange('email')} className=\"form-control\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" value={password} onChange={handleChange('password')} className=\"form-control\"/>\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n        </form>\n    )\n\n    const redirectuser = success => {\n        if(success)\n        {\n            return <Redirect to=\"/dashboard\" />\n        }\n    }\n\n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>)\n    )\n\n    useEffect(() => {\n        init(match.params.userId);\n        showLoading()\n        //eslint-disable-next-line\n    }, [])\n    \n    return (\n        <Layout title=\"My Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <h2>Profile Update</h2>\n            {showLoading()}\n            {profileUpdate(name ,email, password)}\n            {redirectuser(success)}\n        </Layout>\n           \n    )\n}\n\nexport default UserProfile;\n","// Create category\nexport const createCategory = async(userId, token, category) => {\n    return fetch(`/api/category/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Create product\nexport const createProduct = async(userId, token, product) => {\n    return fetch(`/api/product/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// Get categories from backend\nexport const getCategories = () => {\n    return fetch(`/api/categories`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err));\n}\n\n// Fetch all orders for admin\nexport const listOrders = (userId, token) => {\n    return fetch(`/api/order/list/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        console.log(response.json())\n        return response.json()\n    })\n    .catch(err => console.log(err));\n}\n\n// Get status values of all orders\nexport const getStatusValues = (userId, token) => {\n    return fetch(`/api/order/status-values/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// Update status values\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`/api/order/${orderId}/status/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// Get all products\nexport const getProducts = () => {\n    return fetch(`/api/products?limit=100`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n// Get a single product\nexport const getProduct = (productId) => {\n    return fetch(`/api/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n// Update a product\nexport const updateProduct = (productId, userId, token, productData) => {\n    return fetch(`/api/product/${productId}/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: productData   // not stringify because we are using form data as image is also there\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// Delete a product\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`/api/product/${productId}/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React, {useState} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {createCategory} from './ApiAdmin';\n\nconst AddCateogary = () => {\n\n    const[name, setName] = useState('')\n    const[error, setError] = useState(false)\n    const[success, setSuccess] = useState(false)\n\n    // Destructure user and token from localstorage\n    const {user, token} = isAuthenticated()\n\n    const handleChange = e => {\n        setError(false)\n        setName(e.target.value)\n    }\n\n    const clickSubmit = (e) => {\n        e.preventDefault()\n        setError(false)\n        setSuccess(false)\n\n        // make request to backend to create category\n        createCategory(user._id, token, {name})\n            .then(data => {\n                if(data.error)\n                {\n                    setError(true)\n                }\n                else\n                {\n                    setError(false);\n                    setSuccess(true);\n                }\n            })\n    }\n\n    const newCategoryForm = () => (\n        <form>\n            <div className=\"form-group text-center\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange} type=\"name\" className=\"form-control\" value={name} required/>\n            </div>\n               \n            <div style={{textAlign : \"center\"}} >\n                <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n            </div>\n\n        </form>\n    );\n\n    const showSuccess = () => {\n        if(success)\n        {\n            return <h3 className=\"text-success\">{name} is created</h3>\n        }\n    }\n    \n    const showError = () => {\n        if(error)\n        {\n            return <h3 className=\"text-danger\">{name} is not unique</h3>\n        }\n    }\n\n    return (\n        <Layout title=\"Add a new Category\" description={`Ready to add a new category?`}>\n            <div className=\"row\">\n                <div className=\"xs-col-12 col-sm-8\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryForm()}\n                </div>\n            </div>\n        </Layout>\n    )\n\n\n}\n\nexport default AddCateogary\n","import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {createProduct, getCategories} from './ApiAdmin';\n\nconst AddProduct = () => {\n\n    const {user, token} = isAuthenticated();\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: 0,\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        formData: ''\n    });\n\n    const {name, description, price, categories, category, shipping, quantity,\n        loading, error, createdProduct, formData} = values;\n\n    // load categories and form set data\n    const init = () => {\n        getCategories().then(data => {\n            if(data.err)\n            {\n                setValues({...values, error: data.err})\n            }\n            else\n            {\n                setValues({...values, categories: data, formData: new FormData()})\n            }\n        })\n    }\n    \n    useEffect(() => {\n        init();\n        \n        // eslint-disable-next-line\n    }, [])\n    \n\n    const handleChange = name => e => {\n        const value = name ==='photo' ? e.target.files[0] : e.target.value\n        formData.set(name, value)\n        setValues({...values, [name]: value}) \n    }\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setValues({...values, error: '', loading: true});\n\n        createProduct(user._id, token, formData)\n        .then(data => {\n            if(data.err)\n            {\n                setValues({...values, error: data.err});\n            }\n\n            else\n            {\n                setValues({\n                    ...values, name: '', description: '', photo: '', price: '', quantity: 0, loading: '', \n                    category: '', shipping: '',createdProduct: data.name\n                })\n            }\n        })\n    }\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n\n            <h4>Post photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\" value={category}>\n                    <option>Select</option>\n                    {categories && categories.map((c, i) => (\n                        <option key={i} value={c._id}>{c.name}</option>\n                    ))}\n                    </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\" value={shipping}>\n                    <option>Please Select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    )\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display: error? '': 'none'}}>\n            {error}\n        </div>\n    )\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{display: createdProduct? '': 'none'}}>\n            <h2>{`${createdProduct}`} is created</h2>\n        </div>\n    )\n\n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>)\n    )\n\n\n    return (\n        <Layout title=\"Add a new Product\" description={`Ready to add a new Product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showError()}\n                    {showSuccess()}\n                    {showLoading()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    )\n\n\n}\n\nexport default AddProduct;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { getProduct, getCategories, updateProduct } from \"./ApiAdmin\";\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        categories: [],\n        category: \"\",\n        shipping: \"\",\n        quantity: \"\",\n        photo: \"\",\n        loading: false,\n        error: false,\n        createdProduct: \"\",\n        redirectToProfile: false,\n        formData: \"\"\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n        //eslint-disable-next-line\n    }, []);\n\n    const handleChange = name => event => {\n        const value =\n            name === \"photo\" ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: \"\", loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(\n            data => {\n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    setValues({\n                        ...values,\n                        name: \"\",\n                        description: \"\",\n                        photo: \"\",\n                        price: \"\",\n                        quantity: \"\",\n                        loading: false,\n                        error: false,\n                        redirectToProfile: true,\n                        createdProduct: data.name\n                    });\n                }\n            }\n        );\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input\n                        onChange={handleChange(\"photo\")}\n                        type=\"file\"\n                        name=\"photo\"\n                        accept=\"image/*\"\n                    />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    onChange={handleChange(\"name\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={name}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea\n                    onChange={handleChange(\"description\")}\n                    className=\"form-control\"\n                    value={description}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input\n                    onChange={handleChange(\"price\")}\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={price}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select\n                    onChange={handleChange(\"category\")}\n                    className=\"form-control\"\n                >\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select\n                    onChange={handleChange(\"shipping\")}\n                    className=\"form-control\"\n                >\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input\n                    onChange={handleChange(\"quantity\")}\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={quantity}\n                />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div\n            className=\"alert alert-info\"\n            style={{ display: createdProduct ? \"\" : \"none\" }}\n        >\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout\n            title=\"Add a new product\"\n            description={`G'day ${user.name}, ready to add a new product?`}\n        >\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n","import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {listOrders, getStatusValues, updateOrderStatus} from './ApiAdmin';\nimport Moment from 'moment';\n\nexport const Orders = () => {\n    \n    const [orders, setOrders] = useState([]);\n    const [statusValues, setStatusValues] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n    const {user, token} = isAuthenticated();\n    \n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if(data.error)\n            {\n                console.log(data.err);\n                setLoading(false);\n            }\n\n            else\n            {\n                setOrders(data);\n                setLoading(false);\n            }\n        })\n    }\n    \n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if(data.error)\n            {\n                console.log(data.error);\n                setLoading(false);\n            }\n\n            else\n            {\n                setStatusValues(data);\n                setLoading(false);\n            }\n        })\n    }\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value)\n        .then(data => {\n            if(data.error)\n            {\n                console.log(\"Status update fail\");\n            }\n\n            else\n            {\n                loadOrders()\n            }\n        })\n    }\n\n    const showStatus = (o) => {\n        return (<div className=\"form-group\">\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n            <select className = \"form-control\" onChange={(e) => handleStatusChange(e,o._id)}>\n                <option>Update Status</option>\n                {statusValues.map((status, i) => (\n                     <option key={i} value={status}>{status}</option>\n                ))}\n            </select>\n        </div>)\n    }\n\n    \n    const showOrdersLength = () => {\n        // if(orders.length > 0)\n        // {\n        //     return (\n        //         <h2 className=\"text-danger display-2\">Total Orders: {orders.length}</h2>\n        //     )\n        // }\n\n        // else\n        // {\n        //     return (\n        //         <h1 className=\"text-danger\">No Orders</h1>\n        //     )\n        // }\n        return(\n            <h2 className=\"text-danger display-2\">Total Orders: {orders.length}</h2>\n        )\n    }\n\n    const showInput = (key, value) => {\n        return (<div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n            <input type=\"text\" className=\"form-control\" value={value} readOnly />\n        </div>)\n    }\n\n    const showLoading = () => (\n        loading && (<div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>)\n    )\n\n    useEffect(() => {\n        loadOrders()\n        loadStatusValues()\n        showLoading()\n        // eslint-disable-next-line\n    }, [])\n   \n\n    return (\n        <Layout title=\"Orders\" description={`Manage all the orders here`} className=\"container\">\n            {showLoading()}\n        <div className=\"row\">\n            <div className=\"xs-col-12 col-sm-8\">\n                {showOrdersLength()}\n                {orders.map((o, oIndex) => {\n                    return (\n                        <div key={oIndex} className=\"mt-5\" style={{borderBottom: \"5px solid indigo\"}}>\n                            <h2 className=\"mb-5\">\n                                <span className=\"bg-primary\">\n                                    Order Id : {o._id}\n                                </span>\n                            </h2>\n                            <ul className=\"list-group mb-2\">\n                                <li className=\"list-group-item\">{showStatus(o)}</li>\n                                <li className=\"list-group-item\">Transaction_id: {o.transaction_id}</li>\n                                <li className=\"list-group-item\">Amount: {o.amount}</li>\n                                <li className=\"list-group-item\">Ordered by: {o.user.name}</li>\n                                <li className=\"list-group-item\">Order Date: {Moment(o.createdAt).fromNow()}</li>\n                                <li className=\"list-group-item\">Delivery address: {o.address}</li>\n                            </ul>\n\n                            <h5 className=\"mt-4 mb-4 font-italic\">\n                                Total products in the order: {o.products.length}\n                            </h5>\n\n                            {o.products.map((p, pIndex) => {\n                                return (<div className=\"mb-4\" key={pIndex} style={{padding: '20px', border: '1px solid indigo'}}>\n                                    {showInput('Product name', p.name)}\n                                    {showInput('Product price', p.price)}\n                                    {showInput('Product total', p.count)}\n                                    {showInput('Product id', p._id)}\n                                </div>)\n\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    </Layout>\n    )\n}\n\nexport default Orders;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const Orders = () => {\n//     const [orders, setOrders] = useState([]);\n//     const [statusValues, setStatusValues] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     const { user, token } = isAuthenticated();\n\n//     const loadOrders = () => {\n//         return listOrders(user._id, token);\n//     };\n\n//     const loadStatusValues = () => {\n//         return getStatusValues(user._id, token);\n//     };\n\n//     const handleStatusChange = (e, orderId) => {\n//         updateOrderStatus(user._id, token, orderId, e.target.value)\n//             .then(data => {\n//                 if (data.error) {\n//                     console.log(\"Status update fail\");\n//                 } else {\n//                     loadOrders();\n//                 }\n//             })\n//             .catch(error => {\n//                 console.error(\"Error updating order status:\", error);\n//             });\n//     };\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 setLoading(true);\n//                 const [ordersData, statusValuesData] = await Promise.all([\n//                     loadOrders(),\n//                     loadStatusValues(),\n//                 ]);\n//                 setOrders(ordersData);\n//                 setStatusValues(statusValuesData);\n//             } catch (error) {\n//                 console.error(\"Error loading data:\", error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchData();\n\n//         // eslint-disable-next-line\n//     }, [user._id, token]); // Include dependencies for useEffect\n\n//     const showLoading = () => (\n//         loading && (\n//             <div className=\"alert alert-success\">\n//                 <h2>Loading...</h2>\n//             </div>\n//         )\n//     );\n\n//     // Rest of your component remains unchanged\n\n//     return (\n//         <Layout title=\"Orders\" description={`Manage all the orders here`} className=\"container\">\n//             {showLoading()}\n//             {/* ... rest of the component */}\n//             <div className=\"row\">\n//             <div className=\"xs-col-12 col-sm-8\">\n//                 {showOrdersLength()}\n//                 {orders.map((o, oIndex) => {\n//                     return (\n//                         <div key={oIndex} className=\"mt-5\" style={{borderBottom: \"5px solid indigo\"}}>\n//                             <h2 className=\"mb-5\">\n//                                 <span className=\"bg-primary\">\n//                                     Order Id : {o._id}\n//                                 </span>\n//                             </h2>\n//                             <ul className=\"list-group mb-2\">\n//                                 <li className=\"list-group-item\">{showStatus(o)}</li>\n//                                 <li className=\"list-group-item\">Transaction_id: {o.transaction_id}</li>\n//                                 <li className=\"list-group-item\">Amount: {o.amount}</li>\n//                                 <li className=\"list-group-item\">Ordered by: {o.user.name}</li>\n//                                 <li className=\"list-group-item\">Order Date: {Moment(o.createdAt).fromNow()}</li>\n//                                 <li className=\"list-group-item\">Delivery address: {o.address}</li>\n//                             </ul>\n\n//                             <h5 className=\"mt-4 mb-4 font-italic\">\n//                                 Total products in the order: {o.products.length}\n//                             </h5>\n\n//                             {o.products.map((p, pIndex) => {\n//                                 return (<div className=\"mb-4\" key={pIndex} style={{padding: '20px', border: '1px solid indigo'}}>\n//                                     {showInput('Product name', p.name)}\n//                                     {showInput('Product price', p.price)}\n//                                     {showInput('Product total', p.count)}\n//                                     {showInput('Product id', p._id)}\n//                                 </div>)\n\n//                             })}\n//                         </div>\n//                     )\n//                 })}\n//             </div>\n//         </div>\n//         </Layout>\n//     );\n// };\n\n// export default Orders;\n","import React, {useState, useEffect} from 'react'\nimport Layout from '../core/Layout';\nimport {Link} from 'react-router-dom';\nimport {isAuthenticated} from '../auth';\nimport {getProducts, deleteProduct} from './ApiAdmin'\n\nconst ManageProducts = props => {\n\n    const [products, setProducts] = useState([]);\n    \n    const {user, token} = isAuthenticated();\n\n    const loadProducts = () => {\n        getProducts().then(data => {\n            if(data.error)\n            {\n                console.log(data.error);\n            }\n\n            else\n            {\n                setProducts(data);\n            }\n        })\n    }\n\n    const destroy = productId => {\n        deleteProduct(productId, user._id, token).then(data => {\n            if(data.error)\n            {\n                console.log(data.error);\n            }\n\n            else\n            {\n                loadProducts();\n            }\n        })\n    }\n\n    useEffect(() => {\n        loadProducts()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Layout title=\"Manage Products\" description={`Perform CRUD on products`}>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                <h2 className=\"text-center\">Total {products.length} Products</h2>\n                <hr />\n                    <ul className=\"list-group\">\n                        {products.map((p, i) => (\n                            <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <strong>{p.name}</strong>\n                                <Link to={`/admin/products/update/${p._id}`}>\n                                    <span className=\"badge badge-warning badge-pill\">\n                                        Update\n                                    </span>\n                                </Link>\n                                <span onClick={() => destroy(p._id)} className=\"badge badge-danger badge-pill\">\n                                    Delete\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\n\nexport default ManageProducts\n","import React from 'react';\nimport Layout from '../core/Layout';\n\nconst Home = () => {\n    return (\n        <Layout title=\"About\" description=\"Made with ❤ by Charan\">\n            <div className=\"container\">\n                <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"><h2>Github</h2></a>\n                <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"><h2>LinkedIn</h2></a>\n                <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"><h2>Website</h2></a>\n                <a href=\"mailto:sujith2004kumar@gmail.com\"><h2>Email</h2></a>    \n            </div>            \n        </Layout>\n           \n    )\n};\n\nexport default Home\n","import React from 'react';\nimport {BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './core/Home';\nimport Signup from './user/Signup';\nimport Signin from './user/Signin';\nimport PrivateRoute from './auth/PrivateRoute';\nimport AdminRoute from './auth/AdminRoute';\nimport Shop from './core/Shop'\nimport Cart from './core/Cart'\nimport Product from './core/Product';\nimport UserDashboard from './user/UserDashboard';\nimport AdminDashboard from './user/AdminDashboard';\nimport Profile from './user/UserProfile';\nimport AddCategory from './admin/AddCateogary';\nimport AddProduct from './admin/AddProduct';\nimport UpdateProduct from './admin/UpdateProduct';\nimport Orders from './admin/Orders';\nimport ManageProducts from './admin/ManageProducts';\nimport About from './core/About';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/shop\" component={Shop} />\n                <Route exact path=\"/product/:productId\" component={Product} />\n                <Route exact path=\"/signin\" component={Signin} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/cart\" component={Cart} />\n                <Route exact path=\"/about\" component={About} />\n                <PrivateRoute exact path=\"/user/dashboard\" component={UserDashboard} />\n                <PrivateRoute exact path=\"/profile/:userId\" component={Profile} />\n                <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashboard} />\n                <AdminRoute exact path=\"/create/category\" component={AddCategory} />\n                <AdminRoute exact path=\"/create/product\" component={AddProduct} />\n                <AdminRoute exact path=\"/admin/products/update/:productId\" component={UpdateProduct} />\n                <AdminRoute exact path=\"/admin/orders\" component={Orders} />\n                <AdminRoute exact path=\"/admin/products\" component={ManageProducts} />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n"],"sourceRoot":""}